import { GWrapper } from "../../../styles/globale-styles.e";
import { api } from "../../../services/api";
import {MyInput , Button} from '../..'
import Link from "next/link";
import parse from 'html-react-parser'
import * as cascoE from '../../Forms/sport/sport.e'
import {Modal} from '../../../components'

import 'animate.css';
import {
    RenewalBlock,
    RenewInput,
    PoleBlock,
    InfoBlock,
    ButtonBlock,
    Progress
} from '../../renewal-polis/renewal-polis.e'
import { AuthContext } from "../../../context/AuthProvider";
import { useContext } from "react";
import {useForm} from 'react-hook-form'
import { useEffect ,useState } from 'react'
import { parseCookies } from "nookies";
import { Formik, Field, Form } from "formik";

import { useRouter } from "next/router";

const ChackPolis = () => {
    const router = useRouter()
    const [progress , setProgress] = useState('#C4C4C4')
    const {watch , register , handleSubmit ,formState:{errors , isValid}} = useForm({mode:'all'})
    const [modalActive, setModalActive] = useState(false);

    const [check , setCheck] = useState()
    const [polisData , setPolisData] = useState()
    
    const {
        signIn,
        open,
        alert,
        setAlert,
        errorMsg,
        setErrorMsg,
      } = useContext(AuthContext);
    const { ["nextauth.token"]: token } = parseCookies();
    useEffect(() => {
      api.get('checkpolis', {headers: { 'accept-language': router.locale } }).then(async(response)=>{
        setCheck(response.data.data[0])
        console.log(response.data.data)
      })
    
      }, []);
    const onSubmit = (data, e) => {
        api.post('/check' ,data, e).then(async(response)=>{
            setPolisData(response.data.data)
        })
            setProgress('#F6A729')
        console.log(data, e)
    }
    const showModal = () => {
        setModalActive('modal active')
    }
    const onError = (errors, e) => console.log(errors, e);
    const Dorojka = () => {

        return (
            <Progress>
        <svg width="1200" height="45" viewBox="0 0 1200 45" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M9.36 30.96V42H7.76V32.224H5.648C5.264 32.224 4.98667 32.3093 4.816 32.48C4.64533 32.64 4.54933 32.912 4.528 33.296C4.48533 34.0427 4.42667 34.7467 4.352 35.408C4.27733 36.0587 4.18667 36.6773 4.08 37.264C3.97333 37.84 3.83467 38.4 3.664 38.944C3.49333 39.4773 3.29067 39.9947 3.056 40.496C2.832 40.9973 2.56 41.4987 2.24 42H0.784C1.31733 41.104 1.73333 40.1653 2.032 39.184C2.33067 38.2027 2.55467 37.1947 2.704 36.16C2.85333 35.1253 2.95467 34.0907 3.008 33.056C3.04 32.4053 3.25333 31.8933 3.648 31.52C4.05333 31.1467 4.60267 30.96 5.296 30.96H9.36ZM1.616 41.888L1.456 44.416H0.336V41.888H1.616ZM10.736 40.736V42H0.336V40.736H10.736ZM10.736 41.888V44.416H9.616L9.488 41.888H10.736ZM15.6507 34C16.2481 34 16.7494 34.08 17.1547 34.24C17.5601 34.3893 17.8641 34.6507 18.0668 35.024C18.2801 35.3973 18.3867 35.9093 18.3867 36.56V42H17.1707L16.9307 40.304L16.8507 40.112V36.56C16.8401 36.1013 16.7281 35.7707 16.5148 35.568C16.3121 35.3653 15.9121 35.264 15.3147 35.264C14.8987 35.264 14.3814 35.2853 13.7627 35.328C13.1547 35.3707 12.5521 35.4133 11.9547 35.456L11.8107 34.352C12.1734 34.288 12.5787 34.2293 13.0267 34.176C13.4747 34.1227 13.9281 34.08 14.3867 34.048C14.8454 34.016 15.2667 34 15.6507 34ZM17.6827 37.184L17.6667 38.272L14.0027 38.288C13.6401 38.2987 13.3841 38.3947 13.2347 38.576C13.0854 38.7467 13.0107 38.9867 13.0107 39.296V39.776C13.0107 40.16 13.1067 40.4427 13.2987 40.624C13.4907 40.7947 13.7841 40.88 14.1787 40.88C14.4774 40.88 14.8081 40.8267 15.1707 40.72C15.5441 40.6027 15.9174 40.432 16.2908 40.208C16.6641 39.9733 17.0001 39.68 17.2987 39.328V40.336C17.2027 40.4853 17.0481 40.6667 16.8347 40.88C16.6214 41.0827 16.3601 41.28 16.0507 41.472C15.7521 41.664 15.4161 41.824 15.0427 41.952C14.6694 42.08 14.2641 42.144 13.8267 42.144C13.3574 42.144 12.9414 42.064 12.5787 41.904C12.2267 41.7333 11.9494 41.488 11.7467 41.168C11.5547 40.8373 11.4587 40.4373 11.4587 39.968V39.12C11.4587 38.512 11.6507 38.0373 12.0347 37.696C12.4294 37.3547 12.9734 37.184 13.6667 37.184H17.6827ZM21.7254 34.192V42H20.2054V34.192H21.7254ZM25.7734 37.28V38.432H21.6294V37.28H25.7734ZM27.1494 34.192V42H25.6294V34.192H27.1494ZM30.5404 34.192V42H29.0204V34.192H30.5404ZM34.5884 37.28V38.432H30.4444V37.28H34.5884ZM35.9644 34.192V42H34.4444V34.192H35.9644ZM41.0674 37.168C41.8674 37.168 42.4914 37.2427 42.9394 37.392C43.398 37.5413 43.7234 37.7973 43.9154 38.16C44.1074 38.5227 44.2034 39.0133 44.2034 39.632C44.2034 40.272 44.102 40.7733 43.8994 41.136C43.7074 41.4987 43.398 41.7493 42.9714 41.888C42.5447 42.0267 41.99 42.096 41.3074 42.096C40.7847 42.096 40.3314 42.0907 39.9474 42.08C39.5634 42.08 39.2114 42.0693 38.8914 42.048C38.5714 42.0373 38.2354 42.0213 37.8834 42L38.0594 40.88C38.262 40.8907 38.63 40.9013 39.1634 40.912C39.6967 40.9227 40.3314 40.928 41.0674 40.928C41.462 40.928 41.7714 40.8907 41.9954 40.816C42.23 40.7413 42.3954 40.608 42.4914 40.416C42.5874 40.224 42.6354 39.9413 42.6354 39.568C42.6354 39.0773 42.5287 38.736 42.3154 38.544C42.102 38.352 41.686 38.256 41.0674 38.256H38.0434V37.168H41.0674ZM39.3394 34.192V42H37.8354V34.192H39.3394ZM47.1154 34.192V42H45.5634V34.192H47.1154ZM52.2901 34C53.4955 34 54.3648 34.2187 54.8981 34.656C55.4421 35.0827 55.7195 35.7173 55.7301 36.56C55.7301 37.264 55.5755 37.808 55.2661 38.192C54.9568 38.576 54.4501 38.768 53.7461 38.768H49.2181V37.664H53.3461C53.6875 37.664 53.9115 37.552 54.0181 37.328C54.1355 37.104 54.1888 36.848 54.1781 36.56C54.1781 36.08 54.0395 35.7387 53.7621 35.536C53.4955 35.3333 53.0261 35.232 52.3541 35.232C51.8101 35.232 51.3835 35.312 51.0741 35.472C50.7648 35.632 50.5461 35.9093 50.4181 36.304C50.2901 36.6987 50.2261 37.2533 50.2261 37.968C50.2261 38.768 50.3061 39.3813 50.4661 39.808C50.6261 40.224 50.8768 40.512 51.2181 40.672C51.5701 40.832 52.0341 40.912 52.6101 40.912C53.0261 40.912 53.4848 40.896 53.9861 40.864C54.4981 40.8213 54.9621 40.7733 55.3781 40.72L55.5221 41.728C55.2768 41.8347 54.9675 41.9253 54.5941 42C54.2315 42.064 53.8581 42.112 53.4741 42.144C53.0901 42.176 52.7381 42.192 52.4181 42.192C51.5115 42.192 50.7755 42.0533 50.2101 41.776C49.6555 41.4987 49.2501 41.0613 48.9941 40.464C48.7488 39.856 48.6261 39.0613 48.6261 38.08C48.6261 37.056 48.7541 36.2453 49.0101 35.648C49.2661 35.0507 49.6608 34.6293 50.1941 34.384C50.7275 34.128 51.4261 34 52.2901 34ZM63.5318 34C64.4491 34 65.1798 34.1333 65.7238 34.4C66.2678 34.6667 66.6624 35.104 66.9078 35.712C67.1531 36.3093 67.2758 37.104 67.2758 38.096C67.2758 39.0987 67.1531 39.904 66.9078 40.512C66.6624 41.1093 66.2678 41.5413 65.7238 41.808C65.1798 42.0747 64.4491 42.208 63.5318 42.208C62.6144 42.208 61.8784 42.0747 61.3238 41.808C60.7798 41.5413 60.3851 41.1093 60.1398 40.512C59.8944 39.904 59.7718 39.0987 59.7718 38.096C59.7718 37.104 59.8944 36.3093 60.1398 35.712C60.3851 35.104 60.7798 34.6667 61.3238 34.4C61.8784 34.1333 62.6144 34 63.5318 34ZM63.5318 35.248C62.9984 35.248 62.5718 35.3333 62.2518 35.504C61.9424 35.6747 61.7184 35.968 61.5798 36.384C61.4518 36.7893 61.3878 37.36 61.3878 38.096C61.3878 38.832 61.4518 39.408 61.5798 39.824C61.7184 40.24 61.9424 40.5333 62.2518 40.704C62.5718 40.864 62.9984 40.944 63.5318 40.944C64.0651 40.944 64.4864 40.864 64.7958 40.704C65.1051 40.5333 65.3238 40.24 65.4518 39.824C65.5798 39.408 65.6438 38.832 65.6438 38.096C65.6438 37.36 65.5798 36.7893 65.4518 36.384C65.3238 35.968 65.1051 35.6747 64.7958 35.504C64.4864 35.3333 64.0651 35.248 63.5318 35.248ZM78.6017 34.192V42H77.0817V34.192H78.6017ZM73.2737 34.192V42H71.7697V34.192H73.2737ZM77.2257 34.192L77.2097 35.392H73.1937V34.192H77.2257ZM83.8674 34C84.7847 34 85.5154 34.1333 86.0594 34.4C86.6034 34.6667 86.998 35.104 87.2434 35.712C87.4887 36.3093 87.6114 37.104 87.6114 38.096C87.6114 39.0987 87.4887 39.904 87.2434 40.512C86.998 41.1093 86.6034 41.5413 86.0594 41.808C85.5154 42.0747 84.7847 42.208 83.8674 42.208C82.95 42.208 82.214 42.0747 81.6594 41.808C81.1154 41.5413 80.7207 41.1093 80.4754 40.512C80.23 39.904 80.1074 39.0987 80.1074 38.096C80.1074 37.104 80.23 36.3093 80.4754 35.712C80.7207 35.104 81.1154 34.6667 81.6594 34.4C82.214 34.1333 82.95 34 83.8674 34ZM83.8674 35.248C83.334 35.248 82.9074 35.3333 82.5874 35.504C82.278 35.6747 82.054 35.968 81.9154 36.384C81.7874 36.7893 81.7234 37.36 81.7234 38.096C81.7234 38.832 81.7874 39.408 81.9154 39.824C82.054 40.24 82.278 40.5333 82.5874 40.704C82.9074 40.864 83.334 40.944 83.8674 40.944C84.4007 40.944 84.822 40.864 85.1314 40.704C85.4407 40.5333 85.6594 40.24 85.7874 39.824C85.9154 39.408 85.9794 38.832 85.9794 38.096C85.9794 37.36 85.9154 36.7893 85.7874 36.384C85.6594 35.968 85.4407 35.6747 85.1314 35.504C84.822 35.3333 84.4007 35.248 83.8674 35.248ZM95.4255 34.192V35.36H92.5135C92.1935 35.36 91.9588 35.4293 91.8095 35.568C91.6708 35.7067 91.5802 35.952 91.5375 36.304C91.4842 36.7627 91.4202 37.2373 91.3455 37.728C91.2815 38.208 91.2068 38.672 91.1215 39.12C91.0468 39.5573 90.9455 39.952 90.8175 40.304C90.6895 40.7093 90.5028 41.0453 90.2575 41.312C90.0228 41.5787 89.7348 41.776 89.3935 41.904C89.0522 42.0213 88.6628 42.08 88.2255 42.08L88.0655 40.912C88.3428 40.8373 88.5668 40.7573 88.7375 40.672C88.9188 40.5867 89.0575 40.48 89.1535 40.352C89.2602 40.2133 89.3508 40.048 89.4255 39.856C89.5215 39.6213 89.6015 39.344 89.6655 39.024C89.7402 38.704 89.7988 38.3733 89.8415 38.032C89.8948 37.68 89.9375 37.3333 89.9695 36.992C90.0122 36.64 90.0495 36.32 90.0815 36.032C90.1562 35.4347 90.3535 34.9813 90.6735 34.672C90.9935 34.352 91.4788 34.192 92.1295 34.192H95.4255ZM95.6335 34.192V42H94.0815V34.192H95.6335ZM104.535 34.192V42H103.143V37.024C103.143 36.8427 103.149 36.6667 103.159 36.496C103.17 36.3253 103.186 36.1387 103.207 35.936H103.159C103.095 36.096 103.01 36.2667 102.903 36.448C102.807 36.6187 102.711 36.768 102.615 36.896L98.8232 42H97.5272V34.192H98.9192V39.184C98.9192 39.3547 98.9139 39.5253 98.9032 39.696C98.9032 39.8667 98.8926 40.0533 98.8712 40.256H98.9032C98.9886 40.0853 99.0792 39.92 99.1752 39.76C99.2712 39.5893 99.3672 39.4453 99.4632 39.328L103.255 34.192H104.535ZM109.812 34C110.058 34 110.33 34.0107 110.628 34.032C110.927 34.0533 111.231 34.0907 111.54 34.144C111.85 34.1973 112.138 34.2773 112.404 34.384L112.212 35.376C111.839 35.344 111.455 35.3227 111.06 35.312C110.676 35.2907 110.346 35.28 110.068 35.28C109.482 35.28 109.012 35.3653 108.66 35.536C108.308 35.696 108.052 35.9787 107.892 36.384C107.743 36.7893 107.668 37.3547 107.668 38.08C107.668 38.8053 107.743 39.376 107.892 39.792C108.052 40.208 108.308 40.496 108.66 40.656C109.012 40.816 109.482 40.896 110.068 40.896C110.228 40.896 110.436 40.8907 110.692 40.88C110.959 40.8693 111.242 40.8533 111.54 40.832C111.839 40.8107 112.122 40.7787 112.388 40.736L112.532 41.76C112.148 41.9093 111.716 42.016 111.236 42.08C110.756 42.1547 110.276 42.192 109.796 42.192C108.89 42.192 108.159 42.0587 107.604 41.792C107.06 41.5253 106.666 41.0933 106.42 40.496C106.175 39.8987 106.052 39.0933 106.052 38.08C106.052 37.0773 106.175 36.2773 106.42 35.68C106.666 35.0827 107.06 34.656 107.604 34.4C108.159 34.1333 108.895 34 109.812 34ZM116.953 34C118.159 34 119.028 34.2187 119.561 34.656C120.105 35.0827 120.383 35.7173 120.393 36.56C120.393 37.264 120.239 37.808 119.929 38.192C119.62 38.576 119.113 38.768 118.409 38.768H113.881V37.664H118.009C118.351 37.664 118.575 37.552 118.681 37.328C118.799 37.104 118.852 36.848 118.841 36.56C118.841 36.08 118.703 35.7387 118.425 35.536C118.159 35.3333 117.689 35.232 117.017 35.232C116.473 35.232 116.047 35.312 115.737 35.472C115.428 35.632 115.209 35.9093 115.081 36.304C114.953 36.6987 114.889 37.2533 114.889 37.968C114.889 38.768 114.969 39.3813 115.129 39.808C115.289 40.224 115.54 40.512 115.881 40.672C116.233 40.832 116.697 40.912 117.273 40.912C117.689 40.912 118.148 40.896 118.649 40.864C119.161 40.8213 119.625 40.7733 120.041 40.72L120.185 41.728C119.94 41.8347 119.631 41.9253 119.257 42C118.895 42.064 118.521 42.112 118.137 42.144C117.753 42.176 117.401 42.192 117.081 42.192C116.175 42.192 115.439 42.0533 114.873 41.776C114.319 41.4987 113.913 41.0613 113.657 40.464C113.412 39.856 113.289 39.0613 113.289 38.08C113.289 37.056 113.417 36.2453 113.673 35.648C113.929 35.0507 114.324 34.6293 114.857 34.384C115.391 34.128 116.089 34 116.953 34Z" fill="#F6A729"/>
        <path d="M1163.38 30.752C1164.19 30.752 1164.87 30.848 1165.44 31.04C1166.02 31.232 1166.47 31.5467 1166.82 31.984C1167.16 32.4213 1167.4 33.008 1167.55 33.744C1167.71 34.48 1167.79 35.392 1167.79 36.48C1167.79 37.5573 1167.71 38.4693 1167.55 39.216C1167.4 39.952 1167.16 40.5387 1166.82 40.976C1166.47 41.4133 1166.02 41.728 1165.44 41.92C1164.87 42.112 1164.19 42.208 1163.38 42.208C1162.57 42.208 1161.87 42.112 1161.3 41.92C1160.73 41.728 1160.27 41.4133 1159.92 40.976C1159.58 40.5387 1159.33 39.952 1159.17 39.216C1159.01 38.4693 1158.93 37.5573 1158.93 36.48C1158.93 35.392 1159.01 34.48 1159.17 33.744C1159.33 33.008 1159.58 32.4213 1159.92 31.984C1160.27 31.5467 1160.73 31.232 1161.3 31.04C1161.87 30.848 1162.57 30.752 1163.38 30.752ZM1163.38 32.144C1162.68 32.144 1162.13 32.2773 1161.73 32.544C1161.32 32.8107 1161.03 33.2587 1160.86 33.888C1160.7 34.5067 1160.62 35.3707 1160.62 36.48C1160.62 37.5787 1160.7 38.4427 1160.86 39.072C1161.03 39.7013 1161.32 40.1493 1161.73 40.416C1162.13 40.6827 1162.68 40.816 1163.38 40.816C1164.07 40.816 1164.61 40.6827 1165.01 40.416C1165.41 40.1493 1165.7 39.7013 1165.87 39.072C1166.04 38.4427 1166.13 37.5787 1166.13 36.48C1166.13 35.3707 1166.04 34.5067 1165.87 33.888C1165.7 33.2587 1165.41 32.8107 1165.01 32.544C1164.61 32.2773 1164.07 32.144 1163.38 32.144ZM1172.93 34.192V42H1171.37V34.192H1172.93ZM1175.71 34.192V35.44H1168.59V34.192H1175.71ZM1180.03 34.112C1180.85 34.112 1181.5 34.1707 1181.98 34.288C1182.46 34.4053 1182.81 34.6133 1183.02 34.912C1183.25 35.2107 1183.36 35.6373 1183.36 36.192C1183.36 36.7467 1183.23 37.168 1182.96 37.456C1182.69 37.7333 1182.26 37.8987 1181.66 37.952V38C1182.39 38.0533 1182.9 38.256 1183.18 38.608C1183.48 38.96 1183.63 39.4507 1183.63 40.08C1183.63 40.6133 1183.53 41.0293 1183.31 41.328C1183.1 41.616 1182.76 41.8187 1182.3 41.936C1181.85 42.0533 1181.24 42.112 1180.48 42.112C1179.91 42.112 1179.42 42.1067 1178.99 42.096C1178.58 42.096 1178.19 42.0853 1177.84 42.064C1177.5 42.0533 1177.14 42.0373 1176.75 42.016L1176.94 40.912C1177.16 40.9227 1177.56 40.9333 1178.14 40.944C1178.74 40.944 1179.44 40.944 1180.24 40.944C1180.7 40.944 1181.06 40.912 1181.33 40.848C1181.61 40.784 1181.8 40.6667 1181.9 40.496C1182.02 40.3147 1182.08 40.064 1182.08 39.744C1182.08 39.264 1181.94 38.9387 1181.66 38.768C1181.39 38.5867 1180.89 38.496 1180.18 38.496H1176.93V37.456H1180.18C1180.59 37.456 1180.92 37.4293 1181.17 37.376C1181.42 37.312 1181.61 37.2 1181.71 37.04C1181.83 36.8693 1181.89 36.6347 1181.89 36.336C1181.89 36.048 1181.82 35.8293 1181.7 35.68C1181.58 35.5307 1181.38 35.424 1181.1 35.36C1180.83 35.296 1180.45 35.264 1179.98 35.264C1179.5 35.2533 1179.08 35.248 1178.7 35.248C1178.33 35.248 1178 35.2533 1177.71 35.264C1177.42 35.264 1177.17 35.2747 1176.94 35.296L1176.75 34.208C1177.09 34.176 1177.42 34.1547 1177.73 34.144C1178.04 34.1333 1178.37 34.128 1178.74 34.128C1179.11 34.1173 1179.54 34.112 1180.03 34.112ZM1178.21 34.208V42.016H1176.75V34.208H1178.21ZM1188.39 34C1189.6 34 1190.47 34.2187 1191 34.656C1191.55 35.0827 1191.82 35.7173 1191.83 36.56C1191.83 37.264 1191.68 37.808 1191.37 38.192C1191.06 38.576 1190.55 38.768 1189.85 38.768H1185.32V37.664H1189.45C1189.79 37.664 1190.02 37.552 1190.12 37.328C1190.24 37.104 1190.29 36.848 1190.28 36.56C1190.28 36.08 1190.14 35.7387 1189.87 35.536C1189.6 35.3333 1189.13 35.232 1188.46 35.232C1187.91 35.232 1187.49 35.312 1187.18 35.472C1186.87 35.632 1186.65 35.9093 1186.52 36.304C1186.39 36.6987 1186.33 37.2533 1186.33 37.968C1186.33 38.768 1186.41 39.3813 1186.57 39.808C1186.73 40.224 1186.98 40.512 1187.32 40.672C1187.67 40.832 1188.14 40.912 1188.71 40.912C1189.13 40.912 1189.59 40.896 1190.09 40.864C1190.6 40.8213 1191.07 40.7733 1191.48 40.72L1191.63 41.728C1191.38 41.8347 1191.07 41.9253 1190.7 42C1190.34 42.064 1189.96 42.112 1189.58 42.144C1189.19 42.176 1188.84 42.192 1188.52 42.192C1187.62 42.192 1186.88 42.0533 1186.31 41.776C1185.76 41.4987 1185.35 41.0613 1185.1 40.464C1184.85 39.856 1184.73 39.0613 1184.73 38.08C1184.73 37.056 1184.86 36.2453 1185.11 35.648C1185.37 35.0507 1185.77 34.6293 1186.3 34.384C1186.83 34.128 1187.53 34 1188.39 34ZM1196.5 34.192V42H1194.94V34.192H1196.5ZM1199.28 34.192V35.44H1192.16V34.192H1199.28Z" fill="#242424"/>
        <rect x="7" y="6" width="1189" height="5" fill={progress}/>
        <circle cx="8" cy="8" r="8" fill="#F6A729"/>
        <circle cx="1192" cy="8" r="8" fill={progress}/>
        <rect x="11" y="6" width="586" height="5" fill="#F6A729"/>
        </svg>
        </Progress>
        )
    }

   
    const Chack = ({data}) => {
        return (
        <>
            <GWrapper >
                    <h2 className="block-title">{data?.pageTitle}</h2>
                    <Dorojka/>

                    <RenewalBlock className="flex" onSubmit={handleSubmit(onSubmit,onError)}>
                        <div className="w100">
                            {progress !== '#F6A729'  ? (
                                <RenewInput >
                                <h3>Информация о полисе</h3>
                                <PoleBlock>
                                        <MyInput label='Серия и номер полиса' register={register} required={true} placeholder={'123456789'} id='treaty_num' />
                                    <MyInput label='Фамилия страхователя' register={register} required={true} placeholder={'Сабуров'} id='policyholder' />
                                </PoleBlock>
                                <h3>Контактные данные</h3>
                                <PoleBlock>
                                        <MyInput label='Электронная почта' register={register} required={true}  placeholder={'@mail.ru'} id='mail' />
                                    <MyInput label='Номер телефона' register={register} required={true}  placeholder={'998916051636'} id='pjonenumber' />
                                </PoleBlock>
                                <p>Заполните серию и номер как в полисе. Для продления полиса ОСАГО введите серию русскими буквами например: МММ1234567890</p>
                            </RenewInput>
                            ): (
                                <RenewInput>
                                <PoleBlock>
                                    {polisData?.error ? (
                                        <>
                                            <h2 className="animate__animated animate__fadeInDown">Ничего не найдено</h2>
                                        </>
                                    ) : (
                                        <>
                                            <h3>Информация о полисе </h3><h3> {polisData?.product_insurance ? polisData?.product_insurance : ''}</h3>

                                    <cascoE.PoleBlock>
                                        
                                    {!polisData ? (
                                            <div className="Gcenter">
                                                <div className="loader">
                                                    <div></div>
                                                </div>
                                            </div>
                                            ):(
                                            <>
                                            <div className="animate__animated   animate__fadeIn">
                                                {/* Обьект срахования */}
                                                <h3>{polisData?.object_insurance} </h3>  
                                                {/* Обьект срахования */}
                                                <h3>{polisData?.type_insurance}  </h3>
                                                {/* Номер бланка */}
                                                <h3>{polisData?.num_treaty}     </h3>
                                                {/* Страховой продукт */}
                                                <h3>{polisData?.insurance_product}      </h3>
                                                {/* Премия по договору */}
                                                <h3>{polisData?.sum_ins_premium_payable}   </h3>
                                                {/* Срок действия */}
                                                <h3>{polisData?.ins_policy_date}     </h3>
                                            </div>
                                            <div className="animate__animated   animate__fadeIn">
                                                <h4>{polisData?.insurance_object}</h4>
                                                <h4>{polisData?.insurance_type}</h4>
                                                <h4>{polisData?.id}</h4>
                                                <h4>{polisData?.product_insurance}</h4>
                                                <h4>{polisData?.ins_premium_payable_sum ?polisData?.ins_premium_payable_sum : 'не найдено'}</h4>
                                                <h4>{polisData?.ins_policy_start_date} по {polisData?.ins_policy_end_date}</h4>
                                            </div>
                                            </>
                                            )}
                                       
                                    </cascoE.PoleBlock>

                                        </>
                                        
                                    )}
                                    
                                </PoleBlock>
                              
                            </RenewInput>
                            )}
                        {progress !== '#F6A729'?(
                        <ButtonBlock>
                            <Button title={'Продолжить'} disabled={!isValid} type={'submit'}/>
                            <p>На следующем шаге вы сможете узнать ваш полис</p>
                        </ButtonBlock>
                        ):(
                        <ButtonBlock>
                            <Link href='/#katalog'>
                                <a>
                                <Button   title={'Вернуться к каталогу'} />
                                </a>
                            </Link>
                            <p>Вернуться на главную страницу онлайн магазина</p>
                        </ButtonBlock>
                        )}
                        
                        </div>
                        <InfoBlock>
                            <h2>Для проверки вашего полиса вам необходимо:</h2>
                            <p>Номер полиса или бланка</p>
                            <p>Фамилию страхователя по договору</p>
                            <p>По итогам проверки вы сможете узнать статус вашего полиса и его валидность</p>
                        </InfoBlock>
                    </RenewalBlock>
                    
            </GWrapper>
          
        </>
        )
    }
    return (
        <>
        <Modal title={'Войдите в Аккаунт'} active={!token ? 'modal active' : ''} setActive={setModalActive}>
                        <Formik
                        initialValues={{
                            email: "",
                            password: "",
                        }}
                        onSubmit={async (values) => {
                            await signIn(values);
                            // console.log("login = > ", values);
                        }}
                    >
                         {({ values, errors, handleSubmit, handleChange, handleBlur }) => (
                            <form onSubmit={handleSubmit} className="flex_not">
                                <MyInput onBlur={handleBlur}  onChange={handleChange}   classN={ `w100 ${errors.phone && 'error '}`  }id={'email'} label={''} register={register} type={'text'}  placeholder={'Номер телефона '} required={!token ? true : false} />
                                <MyInput onBlur={handleBlur}  onChange={handleChange}  classN={ `w100 ${errors.password && 'error '}`  }id={'password'}  label={''}  type={'text'} register={register}  placeholder={'Введите пароль'} required={!token  ?true : false} />
                                <Button  type={'submit'} title={'Вход'} />
                                <br/>
                                <Link href={'/auth'}>
                                    <a>
                                    <Button   title={'Регестрация'} />
                                    </a>
                                </Link>
                            </form>

                        )}

        </Formik>
        </Modal>
        <div className='animate__animated animate__fadeInLeft'> 
            <Chack data={check}/>
        </div>
        </>
        
    )
}
export default  ChackPolis